openapi: 3.0.0
info:
  title: Signalen Informatievoorziening Amsterdam (SIA) API spec V1"
  description: >-
    One of the tasks of the municipality of Amsterdam is to maintain
    public spaces like roads, parks. When citizens have complaints about public
    spaces they can leave these complaints with the municipality. SIA, the
    Signalen Informatievoorziening Amsterdam, receives these complaints and is
    used to track progress towards their resolution.


    SIA provides an API that is used both by the SIA frontend and external
    systems that integrate with SIA. This swagger file documents that API.
  contact:
    email: "datapunt@amsterdam.nl"
  version: "TBD"
paths:
  /signals/v1/private/signals/:
    get:
      description: Signals list endpoint
      parameters:
        - name: "created_before"
          in: query
          description: >-
            Filter returns only signals created before specified datetime. Note
            the date time string should be in ISO 8601 format and URL encoded.
          schema:
            type: string
            format: date-time
          required: false
        - name: "created_after"
          in: query
          description: >-
            Filter returns only signals created after specified datetime. Note
            the date time string should be in ISO 8601 format and URL encoded.
          schema:
            type: string
            format: date-time
          required: false
        - name: "updated_before"
          in: query
          description: >-
            Filter returns only signals updated before specified datetime. Note
            the date time string should be in ISO 8601 format and URL encoded.
          schema:
            type: string
            format: date-time
          required: false
        - name: updated_after
          in: query
          description: >-
            Filter returns only signals updated after specified datetime. Note
            the date time string should be in ISO 8601 format and URL encoded.
          schema:
            type: string
            format: date-time
          required: false
        - name: status
          in: query
          description: Filter returns only signals with specified status.
          schema:
            $ref: '#/components/schemas/stateChoices'
          required: false
        - name: maincategory_slug
          description: Filter returns only signals with matching main category
            slug.
          in: query
          required: false
          schema:
            type: string
        - name: category_slug
          description: >-
            Filter returns only signals with matching sub category slug.
          in: query
          required: false
          schema:
            type: string
        - name: is_anonymous
          in: query
          description: >-
            Filter either anonymous or non-anonymous signals. A signal is
            anonymous in this context if neither email address nor phone
            number are known for that signal's reporter.
          schema:
            $ref: '#/components/schemas/anonymousChoices'
          required: false
      responses:
        '200':
          description: List of signals
        '401':
          description: Not authenticated, may be caused by expired token.
      security:
      - OAuth2:
        - SIG/ALL
    post:
      description: "Create a new signal."
      requestBody:
        description: Serialized signal data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signalCreate'
      responses:
        '201':
          description: New signal created.
      security:
      - OAuth2:
        - SIG/ALL

  /signals/v1/private/signals/{id}:
    parameters:
      - name: id
        in: path
        description: ID of signal that
        required: true
        schema:
          type: integer
    get:
      description: Retrieve signal by ID.
      responses:
        '200':
          description: Detailed signal instance information.
        '401':
          description: Not authenticated, may be caused by expired token.
      security:
      - OAuth2:
        - SIG/ALL
    patch:
      description: Partial update to signal.
      responses:
        '401':
          description: Not authenticated, may be caused by expired token.
        '404':
          description: Signal not found.
      requestBody:
        description: JSON data to update signal.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signalPatch'
      security:
      - OAuth2:
        - SIG/ALL

  /signals/v1/private/signals/{id}/history:
    parameters:
      - name: id
        in: path
        description: ID of signal whose history needs to be retrieved.
        required: true
        schema:
          type: integer
    get:
      description: History of signal instance with specified ID.
      responses:
        '200':
          description: List of history entries for given signal instance.
        '401':
          description: Not authenticated, may be caused by expired token.
        '404':
          description: Signal not found.
      security:
      - OAuth2:
        - SIG/ALL

  /signals/v1/private/signals/{id}/pdf:
    parameters:
      - name: id
        in: path
        description: ID of signal whose PDF is to be downloaded.
        required: true
        schema:
          type: integer
    get:
      description: Download a PDF summarizing this signals.
      responses:
        '200':
          description: PDF downloaded successfully.
        '401':
          description: Not authenticated, may be caused by expired token.
        '403':
          description: Forbidden, user not authorized to request signal split.
        '404':
          description: Signal not found.
      security:
      - OAuth2:
        - SIG/ALL

  /signals/v1/private/signals/{id}/split:
    parameters:
      - name: id
        in: path
        description: ID of (parent) signal
        required: true
        schema:
          type: integer
    get:
      description: Get split-off children of this signal.
      responses:
        '200':
          description: >-
            Object with URL references to the original signal en its children.
        '401':
          description: Not authenticated, may be caused by expired token.
        '403':
          description: Forbidden, user not authorized to view split signals.
        '404':
          description: Signal not found.
      security:
      - OAuth2:
        - SIG/ALL
    post:
      description: >-
        On a valid post to this endpoint a signal is split. This means its
        status changes to 'split' (GESPLITS) after which it can no longer be
        updated. Simultaneously a number of child signals are created.
      responses:
        '201':
          description: Signal was successful split.
        '412':
          description: >-
            Precondition failed, signal is itself a child or already a parent.
        '400':
          description: >-
            Bad request. Also returned when a split into too many children is
            attempted.
        '401':
          description: Not authenticated, may be caused by expired token.
        '403':
          description: Forbidden, user not authorized to request signal split.
        '404':
          description: Signal not found.
      security:
      - OAuth2:
        - SIG/ALL

  /signals/v1/public/terms/categories:
    get:
      description: Categories known to SIA. **May be changed**
      responses:
        '200':
          description: List of all main categories with embedded sub categories.
  /signals/v1/public/terms/categories/{main_slug}:
    get:
      description: >-
        Information about a specific main category and its sub categories.
        **May be changed**
      responses:
        '200':
          description: Detailed information.
      parameters:
        - name: main_slug
          in: path
          description: Slug that identifies the main category.
          required: true
          schema:
            type: string
  /signals/v1/public/terms/categories/{main_slug}/sub_categories/{sub_slug}:
    get:
      description: Information about a specific sub category.  **May be changed**
      responses:
        '200':
          description: Detailed information.
      parameters:
        - name: main_slug
          in: path
          description: Slug that identifies the main category.
          required: true
          schema:
            type: string
        - name: sub_slug
          in: path
          description: Slug that identifies the sub category.
          required: true
          schema:
            type: string
  /signals/user/auth/me:
    get:
      description: Information about the currently authenticated user.
      responses:
        '200':
          description: User information including permissions.
        '401':
          description: Not authenticated, may be caused by expired token.
      security:
      - OAuth2:
        - SIG/ALL

  /signals/v1/private/signals/category/removed:
    get:
      description: >-
        Signals that dropped from a certain category are listed here.
        **URL may be changed**
      parameters:
        - name: after
          in: query
          description: Timestamp after which dropped signals are to found.
          schema:
            type: string
        - name: before
          in: query
          description: Timestamp before which dropped signals are to found.
          schema:
            type: string
        - name: category_slug
          in: query
          description: Slug for the category.
          schema:
            type: string
      responses:
        '200':
          description: List of droppen Signal instances.
      security:
      - OAuth2:
        - SIG/ALL

  /signals/v1/private/categories/:
    get:
      description: List of all categories available in the system
      responses:
        '200':
          description: List of all categories available in the system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/privateCategoryListResponse'
      security:
      - OAuth2:
        - SIG/ALL
    post:
      description: Creation of categories is not allowed
      responses:
        '405':
          description: Method not allowed
      security:
      - OAuth2:
        - SIG/ALL

  /signals/v1/private/categories/{id}:
    parameters:
      - name: id
        in: path
        description: ID of category
        required: true
        schema:
          type: integer
    get:
      description: Retrieves the category matching the given id
      responses:
        '200':
          description: Details of the category matching the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/privateCategoryResponse'
        '401':
          description: Not authenticated, may be caused by expired token
        '404':
          description: Category not found
      security:
      - OAuth2:
        - SIG/ALL
    patch:
      description: >-
        Will update the following items on a category
          * name
          * is_active
          * description
          * slo (A new slo will be added to the sla list)
      responses:
        '200':
          description: Changes are made, returns the current state of the category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/privateCategoryResponse'
        '400':
          description: >-
            Bad request. Also returned when a split into too many children is
            attempted.
        '401':
          description: Not authenticated, may be caused by expired token
        '404':
          description: Category not found
      requestBody:
        description: JSON data to update signal
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/privateCategoryPatch'
      security:
      - OAuth2:
          - SIG/ALL

  /signals/v1/private/users/:
    get:
      description: Retrieve list of all users.
      parameters:
        - name: "username"
          in: query
          description: Filter by username, allows partial matches
          schema:
            type: string
          required: false
        - name: "is_active"
          in: query
          description: Filter active (true) and inactive (false).
          schema:
            type: string
      responses:
        '200':
          description: List of all users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/privateUserListResponse'
        '401':
          description: Not authenticated, may be caused by expired token.
        '403':
          description: Not authorized to access this endpoint.
      security:
      - OAuth2:
          - SIG/ALL
    post:
      description: Create a new user.
      requestBody:
        description: Serialized new user data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCreate'
      responses:
        '201':
          description: JSON serialization of detailed newly created SIA user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/privateUserDetailResponse'
        '400':
          description: Bad request. Posted new user data did not validate.
        '401':
          description: Not authenticated, may be caused by expired token.
        '403':
          description: Forbidden.
      security:
      - OAuth2:
          - SIG/ALL

  /signals/v1/private/users/{id}:
    parameters:
      - name: id
        in: path
        description: ID of users
        required: true
        schema:
          type: integer
    get:
      description: Retrieve user by id.
      responses:
        '200':
          description: JSON serialization of detailed SIA user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/privateUserDetailResponse'
        '401':
          description: Not authenticated, may be caused by expired token.
        '403':
          description: Forbidden.
      security:
      - OAuth2:
          - SIG/ALL
    patch:
      description: Partial update of user data.
      responses:
        '200':
          description: User data successfully updated.
        '401':
          description: Not authenticated, may be caused by expired token.
        '403':
          description: Forbidden.
      security:
      - OAuth2:
          - SIG/ALL
    put:
      description: Update of user data.
      responses:
        '200':
          description: User data successfully updated.
        '401':
          description: Not authenticated, may be caused by expired token.
        '403':
          description: Forbidden.
      security:
      - OAuth2:
          - SIG/ALL

components:
  schemas:

    signalCreate:
      type: object
      properties:
        source:
          type: string
        text:
          type: string
          description: The complaint text.
        text_extra:
          type: string
          nullable: true
        location:
          $ref: '#/components/schemas/locationInput'
        category:
          $ref: '#/components/schemas/categoryInput'
        reporter:
          $ref: '#/components/schemas/reporterInput'
        priority:
          $ref: '#/components/schemas/priorityInput'
        notes:
          $ref: '#/components/schemas/notesInput'
        incident_date_start:
          type: string
          format: date-time
        incident_date_end:
          type: string
          format: date-time
          nullable: true
        operational_date:
          type: string
          format: date-time
          nullable: true
        extra_properties:
          type: object
          additionalProperties: true
      required:
        - text
        - location
        - incident_date_start

    signalPatch:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/locationInput'
        status:
          $ref: '#/components/schemas/statusInput'
        category:
          $ref: '#/components/schemas/categoryInput'
        priority:
          $ref: '#/components/schemas/priorityInput'
        notes:
          $ref: '#/components/schemas/notesInput'

    userCreate:
      type: object
      properties:
        username:
          description: Username in SIA, will be shown in interface.
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        is_active:
          description: User is active (true) or inactive (false), the default is true
          type: boolean
        role_ids:
          type: array
          items:
            description: ID of role
            type: integer
        profile:
          description: User profile.
          type: object
          properties:
            department_ids:
              type: array
              items:
                description: ID of department to which the new user belongs.
                type: integer
            note:
              description: Note on this new user.
              type: string
      required:
        - username

    userPatch:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        is_active:
          description: User is active (true) or inactive (false)
          type: boolean
        role_ids:
          type: array
          items:
            description: ID of role
            type: integer
        profile:
          description: User profile.
          type: object
          properties:
            department_ids:
              type: array
              items:
                description: ID of department to which the new user belongs.
                type: integer
            note:
              description: Note on this new user.
              type: string

    locationInput:
      description: >-
        Location data associated with a signal. Provide either
        only the "geometrie" in EPSG:4326 coordinates [longitude, latitude]
        or a valid address and the "geometrie" in EPSG:4326 coordinates
        [longitude, latitude]. Providing only a valid address is not
        allowed.
      type: object
      properties:
        geometrie:
          type: object
          properties:
            type:
              type: string
              enum:
                - "Point"
            coordinates:
              type: array
              items:
                type: number
                minItems: 2
                maxItems: 3
          required:
            - coordinates
            - type
        stadsdeel:
          type: string
        buurt_code:
          type: string
        address:  # Check that this matches the new address validation rules.
          type: object
          properties:
            openbare_ruimte:
              type: string
            huisnummer:
              type: number
            huisletter:
              type: string
            huisnummer_toevoeging:
              type: number
            postcode:
              type: string
            woonplaats:
              type: string
        extra_properties:
          type: object
      required:
          - geometrie

    statusInput:
      description: JSON status data for status updates.
      type: object
      properties:
        text:
          type: string
          description: Message to log with status update, will show in logs.
        state:
          $ref: '#/components/schemas/stateChoices'
      required:
        - state

    categoryInput:
      description: JSON category data for category updates.
      type: object
      properties:
        text:
          type: string
          description: Message to log with category update, will show in logs.
        sub_category:
          type: string
          format: uri
      required:
        - sub_category

    priorityInput:
      description: JSON data for priority updates.
      type: object
      properties:
        priority:
          $ref: '#/components/schemas/priorityChoices'

    notesInput:
      description: JSON data for notes updates.
      type: array
      items:
        type: object
        properties:
          text:
            type: string
            description: Note text.

    reporterInput:
      description: Contact information on the reporter of the signal.
      type: object
      properties:
        email:
          description: Email address of reporter.
          type: string
          format: email
        phone:
          description: Phone number of reporter.
          type: string

    stateChoices:
      description: Status string (predefined).
      type: string
      enum:
        - m
        - i
        - b
        - h
        - o
        - a
        - s
        - reopened
        - ingepland
        - "ready to send"
        - "sent"
        - "send failed"
        - "done external"

    priorityChoices:
      type: string
      enum: ['normal', 'high', 'low']

    anonymousChoices:
      type: string
      enum: [true, false]

    privateCategoryResponse:
      description: JSON data describing the category response
      type: object
      properties:
        _links:
          type: object
          properties:
            curies:
              type: object
              properties:
                name:
                  type: string
                  description: The compact URI (curie) named 'sia'
                href:
                  type: string
            self:
              type: object
              properties:
                href:
                  type: string
                  description: URI to the private category
                public:
                  type: string
                  description: URI to the public category
            sia:status-message-templates:
              type: object
              properties:
                href:
                  type: string
                  description: URI to the status message templates of the category
            sia:parent:
              type: object
              properties:
                href:
                  type: string
                  description: URI to the private parent category parent
                public:
                  type: string
                  description: URI to the public parent category detail
        _display:
          type: string
          description: The display value of the category
        id:
          type: integer
          description: The id of the category
        name:
          type: string
          description: The name of the category
        slug:
          type: string
          description: The (generated) slug of the category
        is_active:
          type: boolean
          description: If the current category is still active
        description:
          type: string
          description: Description of the category
        handling_message:
          type: string
          description: Handling message of the category (this is also mailed to the reporter)
        sla:
          type: object
          properties:
            n_days:
              type: integer
              description: Number of days describing the SLA time
            use_calendar_days:
              type: boolean
              description: If the n_days is in calendar days (true) or working days (false)

    privateCategoryListResponse:
      description: JSON data describing the category response
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  description: URI to the list endpoint
            next:
              type: object
              properties:
                href:
                  type: string
                  description: URI to the next page of the list endpoint (if not available this is null)
            previous:
              type: object
              properties:
                href:
                  type: string
                  description: URI to the previous page of the list endpoint (if not available this is null)
        count:
          type: integer
          description: Total count of results for the request
        results:
          type: array
          description: A list of categories, paginated
          items:
            type: object
            $ref: '#/components/schemas/privateCategoryResponse'

    privateCategoryPatch:
      description: JSON data for category updates
      type: object
      properties:
        name:
          type: string
          description: The name of the category
        description:
          type: string
          description: Description of the category
        is_active:
          type: boolean
          description: If the current category is still active
        new_sla:
          type: object
          description: This will add a new sla to the category
          properties:
            n_days:
              type: integer
              description: Number of days describing the SLA time
            use_calendar_days:
              type: boolean
              description: If the n_days is in calendar days (true) or working days (false)

    privateUserListResponse:
      description: JSON serialization of paginated list of SIA users.
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  description: URI of current page
            next:
              type: object
              properties:
                href:
                  type: string
                  description: URI of the next page in SIA users list (null) if not available
            previous:
              type: object
              properties:
                href:
                  type: string
                  description: URI of the previous page in SIA users list (null) if not available
        count:
          type: integer
          description: Total count of results for the request
        results:
          type: array
          description: A list of categories, paginated
          items:
            $ref: '#/components/schemas/privateNestedUserResponse'

    privateNestedUserResponse:
      description: JSON serialization of a SIA user.
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  description: Hyperlink to detailed data of this user.
                  type: string
              required:
                - href
          required:
            - self
        _display:
          description: Textual representation of user for display purposes.
          type: string
        id:
          description: ID of user
          type: integer
        username:
          description: Username
          type: string
          format: email
        is_active:
          description: User is active (true) or inactive (false)
          type: boolean
        roles:
          description: List of roles for this user.
          type: array
          items:
            description: Name of role.
            type: string
        profile:
          $ref: '#/components/schemas/privateNestedProfileResponse'

    privateNestedProfileResponse:
      description: JSON serialization of a SIA user profile
      type: object
      properties:
        note:
          description: Note field associated with a SIA user.
          type: string
        departments:
          description: List of departments associated with a SIA user.
          type: array
          items:
            description: Name of department
            type: string
        created_at:
          description: Timestamp of user profile creation
          type: string
          format: date-time
        updated_at:
          description: Timestamp of last user profile update
          type: string
          format: date-time

    privateUserDetailResponse:
      description: Detailed JSON serialization of a SIA user.
      type: object
      properties:
        _link:
          description: HAL JSON links
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  description: URI of this user in API
                  type: string
                  format: uri
        _display:
          description: Textual representation of user for display purposes.
          type: string
        id:
          description: ID of user
          type: integer
        username:
          description: Username (must be an email address for SIA).
          type: string
          format: email
        email:
          description: Email of user, matches username.
          type: string
          format: email
        first_name:
          description: First name of SIA user.
          type: string
        last_name:
          description: Last name of SIA user.
          type: string
        is_active:
          description: User is active (true) or inactive (false)
          type: boolean
        is_staff:
          description: >-
            SIA is build using the Django web framework. This framework has a
            built-in admin interface for maintenance, users that have the
            is_staff flag set to true are allowed access to this admin
            interface. In SIA the admin is purely for technical purposes,
            day-to-day user management can be achieved through the API and
            associated frontend.
          type: boolean
        is_superuser:
          description: >-
            User has superuser privileges that trump all permission checks
            (true) or has normal user user privileges (false).
          type: boolean
        roles:
          description: List of roles associated with the SIA user.
          type: array
          items:
            $ref: '#/components/schemas/privateNestedRoleResponse'
        permissions:
          description: List of permissions assigned directly to user (not via roles).
          type: array
          items:
            $ref: '#/components/schemas/privateNestedPermissionResponse'
        profile:
           $ref: '#/components/schemas/privateNestedProfileResponse'

    privateNestedRoleResponse:
      description: A SIA role
      type: object
      properties:
        _link:
          description: HAL JSON links
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  description: URI of this role in API
                  type: string
                  format: uri
        _display:
          description: Textual representation of role for display purposes.
          type: string
        id:
          description: ID of this role
          type: integer
        name:
          description: Name of this role
          type: string
        permissions:
          description: List of permissions associated with this role
          type: array
          items:
            $ref: '#/components/schemas/privateNestedPermissionResponse'

    privateNestedPermissionResponse:
      description: SIA permission
      type: object
      properties:
        _link:
          description: HAL JSON links
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  description: URI of this permission in API
                  type: string
                  format: uri
        _display:
          description: Textual representation of permission for display purposes.
          type: string
        id:
          description: ID of this permission
          type: integer
        name:
          description: Name of this permission
          type: string
        codename:
          description: Codename (technical) of this permission
          type: string


  securitySchemes:
    OAuth2:
      description: SIA API is using OAuth2 implicit grant flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: '/oauth2/authorize'
          scopes:
            SIG/ALL: General access to SIA Django application.
