# Generated by Django 2.2.13 on 2020-10-01 07:06

from django.db import migrations, models

CREATE_FUNCTION_SQL = """
CREATE OR REPLACE FUNCTION calculate_signal_checksum()
  RETURNS TRIGGER
  LANGUAGE PLPGSQL
  AS
$$
BEGIN
    NEW.checksum = NULL;
    NEW.checksum = MD5(CONCAT(NEW.*));
    RETURN NEW;
END;
$$
"""

CREATE_TRIGGER_SQL = """
DROP TRIGGER IF EXISTS recalculate_signal_checksum ON signals_signal;

CREATE TRIGGER recalculate_signal_checksum
    BEFORE UPDATE
    ON signals_signal
    FOR EACH ROW
    EXECUTE PROCEDURE calculate_signal_checksum();
"""

DROP_FUNCTION_SQL = """
DROP FUNCTION IF EXISTS calculate_signal_checksum();
"""

DROP_TRIGGER_SQL = """
DROP TRIGGER IF EXISTS recalculate_signal_checksum ON signals_signal;
"""


FORWARD_SQL = """
    UPDATE signals_signal SET checksum = MD5(signals_signal.*::text) WHERE signals_signal.checksum IS NULL
"""


class Migration(migrations.Migration):

    dependencies = [
        ('signals', '0119_rename_eigen-organisatie_to_interne-melding'),
    ]

    operations = [
        migrations.AddField(
            model_name='signal',
            name='checksum',
            field=models.CharField(auto_created=True, max_length=32, null=True),
        ),
        migrations.RunSQL(FORWARD_SQL, reverse_sql=''),  # Add the first checksum to the new column
        migrations.RunSQL(CREATE_FUNCTION_SQL, reverse_sql=DROP_FUNCTION_SQL),  # The function to create the checksum
        migrations.RunSQL(CREATE_TRIGGER_SQL, reverse_sql=DROP_TRIGGER_SQL),  # The trigger to calculate the checksum
        migrations.AlterField(
            model_name='signal',
            name='checksum',
            field=models.CharField(auto_created=True, max_length=32),  # Field cannot be NULL
        ),
    ]
