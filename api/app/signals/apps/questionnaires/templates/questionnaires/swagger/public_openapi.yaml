openapi: 3.0.0

info:
  title: Questionnaires public endpoints
  description: >-
    *** THIS APP IS STILL IN DEVELOPMENT, API MAY STILL CHANGE ***


    A questionnaires app for the Signals project.
    This swagger file contains all public endpoints of the app.
  contact:
    email: "datapunt@amsterdam.nl"
  version: "0.1.0-dev"

servers:
  - url: https://127.0.0.1:{port}/signals/v1
    description: Used for local development
    variables:
      port:
        enum:
          - '8000'
          - '8080'
          - '80'
        default: '8000'

  - url: /signals/v1

paths:
  /public/qa/questionnaires:
    get:
      responses:
        '200':
          description: List of Questionnaires
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicQuestionnaires'
      security:
        - OAuth2:
            - SIG/ALL

  /public/qa/questionnaires/{UUID}:
    parameters:
      - name: UUID
        in: path
        description: UUID of Questionnaire
        required: true
        schema:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
    get:
      responses:
        '200':
          description: Detail of the requested Questionnaire
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicQuestionnaire'
        '404':
          description: Questionnaire not found

  /public/qa/questionnaires/{UUID}/session:
    parameters:
      - name: UUID
        in: path
        description: UUID of Questionnaire
        required: true
        schema:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
    post:
      responses:
        '201':
          description: Detail of the created Session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSession'
        '400':
          description: Bad request
        '404':
          description: Questionnaire not found

  /public/qa/questions:
    get:
      responses:
        '200':
          description: List of Questions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicQuestions'

  /public/qa/questions/{UUID}:
    parameters:
      - name: UUID
        in: path
        description: UUID of Question
        required: true
        schema:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
    get:
      responses:
        '200':
          description: Detail of the selected Question
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicQuestion'
        '404':
          description: Question not found

  /public/qa/questions/{UUID}/answer:
    parameters:
      - name: UUID
        in: path
        description: UUID of Question
        required: true
        schema:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
    post:
      description: Answer a specific question
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PublicAnswerQuestionRequestWithQuestionnaire'
                - $ref: '#/components/schemas/PublicAnswerQuestionRequestWithSession'

      responses:
        '201':
          description: Returns the created answer, the response also contains the next question if available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicAnswerQuestion'
        '400':
          description: Request invalid
        '404':
          description: Question not found

  /public/qa/sessions/{UUID}:
    parameters:
      - name: UUID
        in: path
        description: UUID of the Session
        required: true
        schema:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
    get:
      responses:
        '200':
          description: Detail of the requested Session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSession'

  /public/qa/sessions/{UUID}/answers:
    parameters:
      - name: UUID
        in: path
        description: UUID of Session
        required: true
        schema:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
    post:
      description: Submit a set of answers for a specific Session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicSessionAnswerQuestionList'

      responses:
        '200':
          description: Detail of the current state of the Session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSession'
        '400':
          description: Request invalid
        '404':
          description: Session not found
        '410':
          description: Session already used or expired.

  /public/qa/sessions/{UUID}/attachments:
    parameters:
      - name: UUID
        in: path
        description: UUID of Session
        required: true
        schema:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
    post:
      description: Submit an attachment for a specific Session
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicSessionAnswerAttachmentQuestion'

      responses:
        '200':
          description: Detail of the current state of the Session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSession'
        '400':
          description: Request invalid
        '404':
          description: Session not found
        '410':
          description: Session already used or expired.

  /public/qa/sessions/{UUID}/submit:
    parameters:
      - name: UUID
        in: path
        description: UUID of Session
        required: true
        schema:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
    post:
      description: Submit a session (i.e. freeze it)

      responses:
        '200':
          description: Detail of the current state of the Session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSession'
        '400':
          description: Request invalid
        '404':
          description: Session not found
        '410':
          description: Session already used or expired.

components:
  schemas:
    HALPaginationLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              description: URI of current page
              format: uri
        next:
          type: object
          properties:
            href:
              type: string
              description: URI of the next page
              format: uri
              nullable: true
        previous:
          type: object
          properties:
            href:
              type: string
              description: URI of the previous page
              format: uri
              nullable: true

    PublicQuestionnaires:
      description: JSON serialization of paginated list of Questionnaires
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/HALPaginationLinks'
        count:
          type: integer
          description: Total count of results for the request
          example: 50
        results:
          type: array
          description: A list of Questionnaires, paginated
          items:
            $ref: '#/components/schemas/PublicQuestionnaire'

    PublicQuestionnaire:
      description: Information about a Questionnaire
      type: object
      properties:
        _links:
          type: object
          properties:
            _link:
              description: HAL JSON links
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      description: URI of the Questionnaire
                      type: string
                      format: uri
        _display:
          description: Display name of the Questionnaire
          type: string
        uuid:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
        first_question:
          $ref: '#/components/schemas/PublicQuestion'
        name:
          type: string
          example: "Questionnaire #1"
        description:
          type: string
          nullable: true
          example: "Describing the Questionnaire"
        is_active:
          type: boolean
          example: true
        explanation:
          description: Explanatory text and images to be shown for a questionnaire.
          type: object
          properties:
            title:
              description: Title for the explanatory text.
              type: string
            sections:
              description: Section of text with header and optional images.
              type: array
              items:
                type: object
                properties:
                  header:
                    description: Section header.
                    type: string
                  text:
                    description: Body text for section.
                    type: string
                  files:
                    description: Optional files (images).
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          description: File (image) description.
                          type: string
                        file:
                          description: File (image) location.
                          type: string

    PublicQuestions:
      description: JSON serialization of paginated list of Questions
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/HALPaginationLinks'
        count:
          type: integer
          description: Total count of results for the request
          example: 50
        results:
          type: array
          description: A list of Questions, paginated
          items:
            $ref: '#/components/schemas/PublicQuestion'

    PublicQuestion:
      type: object
      properties:
        _links:
          type: object
          properties:
            _link:
              description: HAL JSON links
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      description: URI of the Question, using the KEY
                      type: string
                      format: uri
                sia:uuid-self:
                  type: object
                  properties:
                    href:
                      description: URI of the Question, using the UUID
                      type: string
                      format: uri
                sia:post-answer:
                  type: object
                  properties:
                    href:
                      description: URI where the answer can be posted
                      type: string
                      format: uri
        _display:
          description: Display name of the Question
          type: string
        key:
          type: string
          nullable: true
          example: 'a-key-describing-the-question'
          description: The `key` property is a copy of the `retrieval_key`.
        retrieval_key:
          type: string
          nullable: true
          example: 'a-key-describing-the-question'
          description: Key for retrieval of a question, must be unique.
        analysis_key:
          type: string
          nullable: true
          example: "question-key"
          description: Key that answer data will be collected under.
        uuid:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
        label:
          type: string
          example: 'Long label for the question'
        short_label:
          type: string
          example: 'Short label'
        field_type:
          type: string
          enum:
            - 'plain_text'
            - 'integer'
          example: 'plain_text'
        next_rules:
          type: string
          nullable: true
          example: [{'payload': 'yes', 'ref': 'next-question-key-1'}, {'payload': 'no', 'ref': 'next-question-key-2'}]
        required:
          type: boolean
          example: false

    PublicAnswerQuestion:
      type: object
      properties:
        _links:
          type: object
        _display:
          description: Display name of the Answer
          type: string
        payload:
          $ref: '#/components/schemas/AnswerPayload'
        session:
          description: The UUID of the Session (cannot be passed if a Questionnaire is used)
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
        questionnaire:
          description: The UUID of the Questionnaire (cannot be passed if a Session is used)
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
        created_at:
          type: string
          example: '2021-01-01T00:00:00+00:00'
        next_question:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PublicQuestion'

    PublicAnswerQuestionRequestWithQuestionnaire:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/AnswerPayload'
        questionnaire:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'

    PublicAnswerQuestionRequestWithSession:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/AnswerPayload'
        session:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'

    PublicSession:
      type: object
      properties:
        _links:
          type: object
          properties:
            _link:
              description: HAL JSON links
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      description: URI of the Session
                      type: string
                      format: uri
                sia:questionnaire:
                  type: object
                  properties:
                    href:
                      description: URI of the questionnaire that the Session is linked to
                      type: string
                      format: uri
                sia:public-signal:
                  type: object
                  properties:
                    href:
                      description: URI of the signal if available
                      type: string
                      format: uri
                sia:post-answer:
                  type: object
                  properties:
                    href:
                      description: URI of endpoint to use to answer questions for this session
                      type: string
                      format: uri
                sia:post-attachments:
                  type: object
                  properties:
                    href:
                      description: >-
                        URI of endpoint to post attachments to for this session. Note this endpoint only accepts
                        multipart encoded POSTs.
                      type: string
                      format: uri
                sia:post-submit:
                  type: object
                  properties:
                    href:
                      description: >-
                        URI of endpoint that is used to freeze a session. After freezing the session is processed and
                        further updates are no longer possible.
                      type: string
                      format: uri

        _display:
          description: Display name of the Session
          type: string
        uuid:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'
        started_at:
          description: When a Session started receiving answers
          type: string
          nullable: true
          example: null
        submit_before:
          description: A Session must be completed before this datetime
          type: string
          nullable: false
          example: '2021-01-01T00:00:00+00:00'
        duration:
          description: A Session has a specific duration (only applies if there is no submit_before)
          type: string
          example: '02:00:00'
        created_at:
          type: string
          example: '2021-01-01T00:00:00+00:00'
        can_freeze:
          type: boolean
          example: false
        path_questions:
          type: array
          items:
            $ref: '#/components/schemas/PublicQuestion'
          minItems: 1
        path_answered_question_uuids:
          type: array
          items:
            type: string
            pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          minItems: 0
        path_unanswered_question_uuids:
          type: array
          items:
            type: string
            pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          minItems: 0
        path_validation_errors_by_uuid:
          type: array
          items:
            type: object
            properties:
              "{uuid}":
                type: array
                items:
                  type: string
          minItems: 0
        questionnaire_explanation:
          type: object
          nullable: true
          properties:
            title:
              type: string
              description: Title for explanatory text
              nullable: true
            sections:
              type: array
              items:
                type: object
                properties:
                  header:
                    type: string
                    nullable: true
                    description: Section header
                  text:
                    type: string
                    nullable: true
                    description: Section text
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                          description: Image description
                          nullable: true
                        file:
                          type: string
                          description: URI of image location
                          nullable: false
        signal_snapshot:
          type: object
          description: Snapshot of signal associated with session at time of session creation
          nullable: true
          required:
            - signal_id
            - id
          properties:
            id:
              oneOf:
                - type: integer
                - type: string
              nullable: true
              example: 1234
            signal_id:
              type: string
              description: public UUID identifier of signal associated with session
            location:
              type: object
              nullable: true
              required:
                - geometrie
                    - address
                    - address_text
              properties:
                address:
                  type: object
                  description: Object with address properties
                  nullable: true
                address_text:
                  type: string
                  description: human readable address
                  nullable: true
                geometrie:
                  type: object
                  required:
                    - coordinates
                    - type
                  properties:
                    coordinates:
                      type: array
                      items:
                        type: number
                      description: Two element array with orignal complaint (Signal) coordinates.
                    type:
                      type: string
                stadsdeel:
                  type: string
                  description: city borough (used in Signalen Amsterdam only)
                  nullable: false
                area_name:
                  type: string
                  description: city district
                  nullable: false

    PublicSessionAnswerQuestion:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/AnswerPayload'
        question_uuid:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'

    PublicSessionAnswerQuestionList:
      type: array
      items:
        $ref: '#/components/schemas/PublicSessionAnswerQuestion'

    PublicSessionAnswerAttachmentQuestion:
      type: object
      properties:
        file:
          type: string
          format: binary
        question_uuid:
          type: string
          pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
          example: '00000000-0000-0000-0000-000000000000'

    AnswerBoolean:
      type: boolean
      example: true

    AnswerDate:
      type: string
      format: date
      example: 2022-09-13

    AnswerTime:
      type: string
      format: time
      example: 00:00:00

    AnswerDateTime:
      type: string
      format: date-time
      example: 2022-09-13T00:00:00

    AnswerFloat:
      type: number
      format: float
      example: 3.14159

    AnswerInteger:
      type: integer
      example: -1234

    AnswerPositiveInteger:
      type: integer
      minimum: 0
      example: 5678

    AnswerPlainText:
      type: string
      example: Just an example text that can be submitted.

    AnswerEmail:
      type: string
      format: email
      example: melder@example.com

    AnswerDutchTelephoneNumber:
      type: string
      pattern: ^(?:0|(?:\+|00) ?31 ?)(?:(?:[1-9] ?(?:[0-9] ?){8})|(?:6 ?-? ?[1-9] ?(?:[0-9] ?){7})|(?:[1,2,3,4,5,7,8,9]\d ?-? ?[1-9] ?(?:[0-9] ?){6})|(?:[1,2,3,4,5,7,8,9]\d{2} ?-? ?[1-9] ?(?:[0-9] ?){5}))$
      example: 06 12 34 56 78

    AnswerSelectedObject:
      type: object
      properties:
        id:
          oneOf:
            - type: integer
            - type: string
          nullable: true
          example: 1234
        type:
          type: string
          example: container
        onMap:
          type: boolean
          example: false
        coordinates:
          type: object
          description: The coordinates uses the World Geodetic System (WGS84)
          properties:
            lat:
              type: number
              format: float
              minimum: -90
              maximum: 90
              example: 52.36768424
            lng:
              type: number
              format: float
              minimum: -180
              maximum: 180
              example: 4.90022563

    MultipleAnswersBoolean:
      type: array
      items:
        $ref: '#/components/schemas/AnswerBoolean'

    MultipleAnswersDate:
      type: array
      items:
        $ref: '#/components/schemas/AnswerDate'

    MultipleAnswersTime:
      type: array
      items:
        $ref: '#/components/schemas/AnswerTime'

    MultipleAnswersDateTime:
      type: array
      items:
        $ref: '#/components/schemas/AnswerDateTime'

    MultipleAnswersFloat:
      type: array
      items:
        $ref: '#/components/schemas/AnswerFloat'

    MultipleAnswersInteger:
      type: array
      items:
        $ref: '#/components/schemas/AnswerInteger'

    MultipleAnswersPositiveInteger:
      type: array
      items:
        $ref: '#/components/schemas/AnswerPositiveInteger'

    MultipleAnswersPlainText:
      type: array
      items:
        $ref: '#/components/schemas/AnswerPlainText'

    MultipleAnswersEmail:
      type: array
      items:
        $ref: '#/components/schemas/AnswerEmail'

    MultipleAnswersDutchTelephoneNumber:
      type: array
      items:
        $ref: '#/components/schemas/AnswerDutchTelephoneNumber'
    
    MultipleAnswersSelectedObject:
      type: array
      items:
        $ref: '#/components/schemas/AnswerSelectedObject'

    AnswerPayload:
      oneOf:
        - $ref: '#/components/schemas/AnswerBoolean'
        - $ref: '#/components/schemas/MultipleAnswersBoolean'
        - $ref: '#/components/schemas/AnswerDate'
        - $ref: '#/components/schemas/MultipleAnswersDate'
        - $ref: '#/components/schemas/AnswerTime'
        - $ref: '#/components/schemas/MultipleAnswersTime'
        - $ref: '#/components/schemas/AnswerDateTime'
        - $ref: '#/components/schemas/MultipleAnswersDateTime'
        - $ref: '#/components/schemas/AnswerFloat'
        - $ref: '#/components/schemas/MultipleAnswersFloat'
        - $ref: '#/components/schemas/AnswerInteger'
        - $ref: '#/components/schemas/MultipleAnswersInteger'
        - $ref: '#/components/schemas/AnswerPositiveInteger'
        - $ref: '#/components/schemas/MultipleAnswersPositiveInteger'
        - $ref: '#/components/schemas/AnswerPlainText'
        - $ref: '#/components/schemas/MultipleAnswersPlainText'
        - $ref: '#/components/schemas/AnswerEmail'
        - $ref: '#/components/schemas/MultipleAnswersEmail'
        - $ref: '#/components/schemas/AnswerDutchTelephoneNumber'
        - $ref: '#/components/schemas/MultipleAnswersDutchTelephoneNumber'
        - $ref: '#/components/schemas/AnswerSelectedObject'
        - $ref: '#/components/schemas/MultipleAnswersSelectedObject'

  securitySchemes:
    OAuth2:
      description: SIA API is using OAuth2 implicit grant flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: '/oauth2/authorize'
          scopes:
            SIG/ALL: General access to SIA Django application.