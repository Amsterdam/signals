# SPDX-License-Identifier: MPL-2.0
# Copyright (C) 2023 Gemeente Amsterdam
# Generated by Django 3.2.18 on 2023-03-20 13:41

from django.db import migrations, models

import signals.apps.services.domain.checker_factories
import signals.apps.services.domain.mimetypes
import signals.apps.services.validator.file
import signals.apps.signals.models.utils


class Migration(migrations.Migration):

    dependencies = [
        ('signals', '0186_drop_deprecated_history_db_view'),
    ]

    operations = [
        migrations.DeleteModel(
            name='History',
        ),
        migrations.AlterModelOptions(
            name='routingexpression',
            options={'ordering': ['order']},
        ),
        migrations.AlterField(
            model_name='attachment',
            name='file',
            field=models.FileField(max_length=255, upload_to='attachments/%Y/%m/%d/', validators=[
                signals.apps.services.validator.file.MimeTypeAllowedValidator(
                    signals.apps.services.domain.mimetypes.MimeTypeFromContentResolverFactory(),
                    ('image/jpeg', 'image/png', 'image/gif', 'application/pdf')
                ),
                signals.apps.services.validator.file.MimeTypeIntegrityValidator(
                    signals.apps.services.domain.mimetypes.MimeTypeFromContentResolverFactory(),
                    signals.apps.services.domain.mimetypes.MimeTypeFromFilenameResolverFactory()
                ),
                signals.apps.services.validator.file.ContentIntegrityValidator(
                    signals.apps.services.domain.mimetypes.MimeTypeFromContentResolverFactory(),
                    signals.apps.services.domain.checker_factories.ContentCheckerFactory()
                ),
                signals.apps.services.validator.file.FileSizeValidator(20971520)
            ]),
        ),
        migrations.AlterField(
            model_name='category',
            name='icon',
            field=models.FileField(
                blank=True, max_length=255, null=True,
                upload_to=signals.apps.signals.models.utils.upload_category_icon_to, validators=[
                    signals.apps.services.validator.file.MimeTypeAllowedValidator(
                        signals.apps.services.domain.mimetypes.MimeTypeFromContentResolverFactory(),
                        ('image/jpeg', 'image/png', 'image/gif', 'image/svg+xml')
                    ),
                    signals.apps.services.validator.file.MimeTypeIntegrityValidator(
                        signals.apps.services.domain.mimetypes.MimeTypeFromContentResolverFactory(),
                        signals.apps.services.domain.mimetypes.MimeTypeFromFilenameResolverFactory()
                    ),
                    signals.apps.services.validator.file.ContentIntegrityValidator(
                        signals.apps.services.domain.mimetypes.MimeTypeFromContentResolverFactory(),
                        signals.apps.services.domain.checker_factories.ContentCheckerFactory()
                    ),
                    signals.apps.services.validator.file.FileSizeValidator(20971520)
                ]),
        ),
    ]
