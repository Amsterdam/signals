# SPDX-License-Identifier: MPL-2.0
# Copyright (C) 2019 - 2021 Gemeente Amsterdam
# Generated by Django 2.2.8 on 2019-12-16 11:51

import django.db.models.deletion
from django.db import migrations, models

# Copy the data from the existing, by Django generated, table into the newly created
# signals_categorydepartment table. Because the is_responsible and can_view fields did not exists
# we want the functionality to keep working as it was before hence we set them both to True
copy_category_departments = """
INSERT INTO signals_categorydepartment(is_responsible, can_view, category_id, department_id)
SELECT True, True, category_id, department_id FROM signals_category_departments;
"""


class Migration(migrations.Migration):

    dependencies = [
        ('signals', '0084_auto_20191127_1339'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
                ('is_responsible', models.BooleanField(default=False)),
                ('can_view', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                               to='signals.Category')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                 to='signals.Department')),
            ],
        ),
        migrations.RunSQL(copy_category_departments),
        migrations.RemoveField(
            model_name='category',
            name='departments',
        ),
        migrations.AddField(
            model_name='category',
            name='departments',
            field=models.ManyToManyField(related_name='d', through='signals.CategoryDepartment',
                                         to='signals.Department'),
        ),
        migrations.AlterModelOptions(
            name='department',
            options={
                'ordering': ('name',),
                'permissions': (
                    ('sia_department_read', 'Can add/change a department'),
                    ('sia_department_write', 'Can add/change a department')
                )
            },
        ),
    ]
