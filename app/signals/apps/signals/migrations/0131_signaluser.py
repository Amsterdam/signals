# SPDX-License-Identifier: MPL-2.0
# Copyright (C) 2019 - 2021 Gemeente Amsterdam
# Generated by Django 2.2.13 on 2020-12-14 08:27

import django.db.models.deletion
from django.conf import settings
from django.contrib.auth import get_user_model
from django.db import migrations, models

User = get_user_model()


def _migrate_signal_users(apps, schema_editor):
    users = apps.get_model('users', 'SignalUser')
    SignalUser = apps.get_model('signals', 'SignalUser')

    for user in users.objects.all():
        SignalUser.objects.create(
            _signal=user._signal,
            user=user.user,
            created_by=user.created_by
        )


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('signals', '0130_altered_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='SignalUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='signaluser',
            name='_signal',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='signals.Signal'),
        ),
        migrations.AddField(
            model_name='signaluser',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL), # noqa
        ),
        migrations.RunPython(_migrate_signal_users, None),  # No reverse possible
        migrations.AlterField(
            model_name='signal',
            name='user_assignment',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_assignment_signal', to='signals.SignalUser'), # noqa
        ),
    ]
