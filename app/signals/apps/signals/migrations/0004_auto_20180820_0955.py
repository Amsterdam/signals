# SPDX-License-Identifier: MPL-2.0
# Copyright (C) 2018 - 2021 Gemeente Amsterdam
# Generated by Django 2.1 on 2018-08-20 09:55

from django.contrib.gis.geos import Point
from django.db import migrations


def fix_swapped_lat_lon(apps, schema_editor):
    """
    If latitude and longitude are reversed, fix that.

    Note:
    * because of a frontend bug, only reversed coordinates (lat, lon) were accepted
    * signals is intended for use in Amsterdam, so reversed coordinates are easy to
      spot
    """
    Location = apps.get_model('signals', 'Location')
    for loc in Location.objects.all():
        # change those coordinates, that when reversed, are in or near Amsterdam
        lon, lat = loc.geometrie.coords[:2]
        if (1 < lat < 7) and (50 < lon < 55):
            corrected = Point(lat, lon, srid=4326)
            loc.geometrie = corrected
            loc.save()


class Migration(migrations.Migration):

    dependencies = [
        ('signals', '0003_auto_20180808_0738'),
    ]

    operations = [
        migrations.RunPython(fix_swapped_lat_lon),
    ]
