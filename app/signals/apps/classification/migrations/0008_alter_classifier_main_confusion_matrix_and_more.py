# Generated by Django 4.2.24 on 2025-09-16 12:24

from django.db import migrations, models
import signals.apps.services.domain.checker_factories
import signals.apps.services.domain.mimetypes
import signals.apps.services.validator.file


class Migration(migrations.Migration):

    dependencies = [
        ('classification', '0007_classifier_main_confusion_matrix_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='classifier',
            name='main_confusion_matrix',
            field=models.FileField(blank=True, max_length=255, null=True, upload_to='classification_models/main_confusion_matrix/%Y/%m/%d/'),
        ),
        migrations.AlterField(
            model_name='classifier',
            name='main_model',
            field=models.FileField(blank=True, max_length=255, null=True, upload_to='classification_models/main/%Y/%m/%d/'),
        ),
        migrations.AlterField(
            model_name='classifier',
            name='sub_confusion_matrix',
            field=models.FileField(blank=True, max_length=255, null=True, upload_to='classification_models/sub_confusion_matrix/%Y/%m/%d/'),
        ),
        migrations.AlterField(
            model_name='classifier',
            name='sub_model',
            field=models.FileField(blank=True, max_length=255, null=True, upload_to='classification_models/main_sub/%Y/%m/%d/'),
        ),
        migrations.AlterField(
            model_name='trainingset',
            name='file',
            field=models.FileField(max_length=255, upload_to='training_sets/%Y/%m/%d/', validators=[signals.apps.services.validator.file.MimeTypeAllowedValidator(signals.apps.services.domain.mimetypes.MimeTypeFromContentResolverFactory(), 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'), signals.apps.services.validator.file.MimeTypeIntegrityValidator(signals.apps.services.domain.mimetypes.MimeTypeFromContentResolverFactory(), signals.apps.services.domain.mimetypes.MimeTypeFromFilenameResolverFactory()), signals.apps.services.validator.file.ContentIntegrityValidator(signals.apps.services.domain.mimetypes.MimeTypeFromContentResolverFactory(), signals.apps.services.domain.checker_factories.ContentCheckerFactory()), signals.apps.services.validator.file.FileSizeValidator(20971520)]),
        ),
    ]
