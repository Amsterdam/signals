services:
  caddy:
    image: caddy:2.7-alpine
    ports:
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile

  api:
    build:
      context: .
      target: dev
    ports:
      - "8000:8000"
    depends_on:
      dex:
        condition: service_started
      mailpit:
        condition: service_started
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_started
      celery:
        condition: service_started
      celery_beat:
        condition: service_started
    env_file:
      - docker-compose/environments/.api
    volumes:
      - ./app:/app
      - ./dwh_media:/dwh_media
      - ./docker-compose/scripts/initialize.sh:/initialize.sh
    command:
      - /initialize.sh

  celery:
    build:
      context: .
      target: prod
    depends_on:
      mailpit:
        condition: service_started
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_started
      rabbit:
        condition: service_started
    env_file:
      - docker-compose/environments/.celery
    volumes:
      - ./app:/app
    command: celery -A signals worker -l debug

  flower:
    build:
      context: .
      target: prod
    ports:
      - "5566:5566"
    depends_on:
      mailpit:
        condition: service_started
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_started
      rabbit:
        condition: service_started
    env_file:
      - docker-compose/environments/.celery
    volumes:
      - ./app:/app
    command: celery -A signals flower --port=5566

  celery_beat:
    build:
      context: .
      target: prod
    depends_on:
      mailpit:
        condition: service_started
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_started
      rabbit:
        condition: service_started
      celery:
        condition: service_started
    env_file:
      - docker-compose/environments/.celery_beat
    volumes:
      - ./app:/app
    command: celery -A signals beat -l debug --pidfile /tmp/celerybeat.pid

  mailpit:
    image: axllent/mailpit
    ports:
      - "1025:1025"
      - "8025:8025"

  dex:
    image: quay.io/dexidp/dex:v2.23.0
    user: root
    command: serve /config.yml
    ports:
      - "5556:5556"
    volumes:
      - ./docker-compose/dex/dex.dev.yml:/config.yml
      - dex-data:/data

  elasticsearch:
    image: elasticsearch:7.17.9
    shm_size: '512m'
    command: elasticsearch -Ehttp.host=0.0.0.0 -Etransport.host=127.0.0.1 -Expack.security.enabled=false
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx4g"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data

  database:
    # postgis 3.2 is the extension version provided by Azure Database for PostgreSQL Flexible Server at the time of writing
    # https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/concepts-extensions#postgres-12-extensions
    image: postgis/postgis:12-3.2-alpine
    shm_size: '1024m'
    ports:
      - "5409:5432"
    environment:
      POSTGRES_DB: signals
      POSTGRES_USER: signals
      POSTGRES_PASSWORD: insecure
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./dumps:/dumps
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U signals -d signals'"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbit:
    image: rabbitmq:3.8-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_ERLANG_COOKIE='secret cookie here'
      - RABBITMQ_DEFAULT_USER=signals
      - RABBITMQ_DEFAULT_PASS=insecure
      - RABBITMQ_DEFAULT_VHOST=vhost

volumes:
  dex-data:
  es-data:
  postgres-data:
